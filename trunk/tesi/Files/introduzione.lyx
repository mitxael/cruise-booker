#LyX 1.6.4 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "capitolo1"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
chapter{Introduzione}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Standard
boh..
\end_layout

\begin_layout Section
Animazione e Simulazione
\end_layout

\begin_layout Standard
A partire dagli anni '80, lo sviluppo animazioni per la visualizzazione
 di algoritmi stata in continuo aumento.
 La prima testimonianza che si ha 
\begin_inset Quotes eld
\end_inset

Sorting out sorting
\begin_inset Quotes erd
\end_inset

, un video di presentazione degli algoritmi di ordinamento, primo nel suo
 genere.
\end_layout

\begin_layout Standard
Dal 1981 fino ad oggi, le rappresentazioni di algoritmi e strutture dati
 si sono diffuse ed hanno trovato il loro scopo finale come supporto per
 studenti ed insegnanti nei relativi corsi universitari.
\end_layout

\begin_layout Standard
Osservando il materiale disponibile ad oggi sul web e come ci fa notare
 [1], possiamo riconoscere che esistono principalmente due forme in cui
 si sono sviluppati i tool di algorithm visualization: l'animazione e la
 simulazione.
\end_layout

\begin_layout Standard
La prima consiste in una visualizzazione degli effetti che un algoritmo
 predefinito ha su una struttura dati definita dal programmatore.
 L'utente, in questo caso, assiste passivamente all'animazione osservandone
 i risultati sulla struttura dati.
\end_layout

\begin_layout Standard
Nel secondo caso parliamo di simulazione in quanto l'utente manipola gli
 oggetti messi a disposizione dal programmatore secondo le modifiche permesse
 dalla struttura in modo da creare una sequenza di passi analoghi a quelli
 dell'algoritmo che si sta analizzando.
\end_layout

\begin_layout Standard
Naturalmente questa una classificazione grossolana, in quanto ogni tool
 ha le sue particolari caratteristiche.
 Le funzionalit introdotte negli anni nelle varie applicazioni disponibili
 hanno permesso una seconda classificazione pi accurata in base all'interazione
 che tali visualizzazioni hanno con gli studenti.
 Il risultato di gruppo di lavoro su 
\begin_inset Quotes eld
\end_inset

Improving the Educational Impact of Algorithm Visualization
\begin_inset Quotes erd
\end_inset

 (Giugno 2002, ITiCSE, Denmark) stata la suddivisione in 6 categorie delle
 varie forme di insegnamento in base al supporto di visualizzazione utilizzato,
 riportata in [3]: 
\end_layout

\begin_layout Enumerate
No viewing (come lo traduco??), gli studenti non hanno a disposizione nessun
 supporto visivo, (o al massimo immagini non animate);proprio 
\end_layout

\begin_layout Enumerate
Viewing, osservazione passiva dell'esecuzione dell'algoritmo, in cui possibile
 al massimo controllare il flusso di esecuzione tramite comandi di undo
 - redo - rewind....
 
\end_layout

\begin_layout Enumerate
Responding, come per viewing consiste nell'osservazione della rappresentazione
 dell'algoritmo, durante la quale allo studente richiesto di rispondere
 ad una serie di domande, o svolgere esercizi su carta, relativi all'argomento
 presentato.
 
\end_layout

\begin_layout Enumerate
Changing, modificare la visualizzazione principalmente attraverso la personalizz
azione dei dati in ingresso all'algoritmo, in modo da analizzare il comportament
o dell'algoritmo nei vari casi.
 
\end_layout

\begin_layout Enumerate
Constructing, costruire la propria visualizzazione dell'algoritmo che si
 sta studiando 
\end_layout

\begin_layout Enumerate
Presenting, presentare ad un pubblico la visualizzazione di un particolare
 algoritmo, per poi procedere ad una discussione sull'argomento.
 
\end_layout

\begin_layout Standard
I risultati delle tipologie di insegnamento appena riportate sono soggetto
 di numerosi studi presenti e passati, e una sinteri dei risulati raccolti
 presente nella 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:studi-effettuati-sull'efficacia"

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:studi-effettuati-sull'efficacia"

\end_inset

Studi effettuati sull'efficacia degli AV nell'insegnamento
\end_layout

\begin_layout Standard
A seguito della classificazione delle tipologie di insegnamento dei corsi
 riguardanti Algoritmi e Strutture Dati, e la loro interazione con le tecnologie
 di visualizzazione algoritmi, sono stati effettuati numerosi studi a proposito
 dell'efficacia dell'introduzione di queste nuove tecniche sull'apprendimento
 degli studenti.
\end_layout

\begin_layout Standard
Un'analisi generale riportata in [3].
 Lo studio [7] hanno riportato gli studenti analizzati che hanno utilizzato
 un supporto alle lezioni di tipo 3(responding) e 5(construction), hanno
 ottenuto risultati migliori nei test, rispetto ad altri studenti che non
 ne avevano fatto uso, o che avevano utilizzato una semplice animazione
 (livello 2).
 Negli studi [9,10] sono stati raccolti invece risultati in conflitto con
 i primi.
 Secondo questi ultimi, non c' stata nessuna differenza significati nei
 risultati ottenuti dagli studenti con l'una o l'altra tipologia di supporto
 alle lezioni.
\end_layout

\begin_layout Standard
Lo studio riportato in [3] mette in risalto il miglioramento degli studenti,
 a seconda della tecnica di supporto visivo utilizzata, tenendo anche conto
 anche delle conoscenze precedenti dei soggetti.
 Gli studenti, provenienti da 3 diverse universit, sono stati soggetti di
 un pre-test, nel quale venivano valutate le loro conoscenze e attitudini,
 prima delle lezioni.
 A seconda dei risultati, sono stati divisi in tre gruppi per ognuno dei
 quali sono state effettuate una serie di lezioni sull'argomento degli algoritmi
 di ordinamento con l'utilizzo di 3 diverse tecniche: 
\end_layout

\begin_layout Enumerate
Lezioni frontali senza supporti visivi 
\end_layout

\begin_layout Enumerate
Lezioni frontali con l'utilizzo da parte del docente di una presentazione
 e di un tool di visualizzazione di algoritmi 
\end_layout

\begin_layout Enumerate
Lezioni frontali (come gruppo 2) con l'aggiunta di ore supplementari di
 attivit di laboratorio, in cui gli studenti potevano utilizzare singolarmente
 un'applicazione (JHAVE' [??]) che permette di osservare l'animazione degli
 algoritmi integrata con domande ad-hoc.
 
\end_layout

\begin_layout Standard
A seguito di queste attivit, gli studenti sono stati esaminati con un test
 uguale per tutti.
\end_layout

\begin_layout Standard
I risultati ottenuti si sono rilevati concordi con [7,8] in quanto rapportando
 le conoscenze iniziali degli studenti con gli esiti dei test di verifica,
 si osservato che maggiore l'interazione con lo strumento di supporto, maggiori
 sono i progressi ottenuti dagli studenti.
\end_layout

\begin_layout Standard
A seguito di questo studio si quindi potuto supporre che i risultati non
 significativi di [9] fossero dovuti ad un'inadeguata tecnica di raccolta:
 nel caso delle domande gli studenti, lasciati liberi a se stessi e non
 confinati in un laboratorio, hanno affrontato il tool come un gioco e non
 come uno strumento educativo.
\end_layout

\begin_layout Standard
Per quanto riguarda la categoria di applicazioni 6 (presentig), purtroppo
 non sono ancora presenti studi che indichino l'efficacia di tale tecnica
 di insegnamento.
\end_layout

\begin_layout Standard
[Aggiungere testimonianza corso di studi algoritmie strutture dati in cui
 sono state adoperate le tecniche sopra, obbligando gli studenti, che le
 hanno trovate utili e il 65% ha passato l'esame al primo colpo]
\end_layout

\begin_layout Section
Come creare un buon AV
\end_layout

\begin_layout Standard
Algoviz [5] costituisce il sito di riferimento per studenti docenti e chiunque
 altro sia interessato nella ricerca di un'applicazione che raccolga visualizzaz
ioni di algoritmi, o l'animazione di una particolare struttura.
 Dal 2006 il sito raccoglie in un proprio archivio (continuamente aggiornato)
 tutte gli strumenti rintracciabili sul web relativi a questo argomento.
 Tale sito stato anche il punto di partenza di questa tesi, in quanto ha
 permesso di esplorare e analizzare i principali toolkit per sviluppatori
 presenti al momento, e inoltre contiene un'interessante guida per chi si
 appresta a realizzare una propria visualizzazione di algoritmi.
\end_layout

\begin_layout Standard
Si riporta ora una sintesi dei principi chiave esposti nella guida: 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Coinvolgere
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 fare in modo che l'utente partecipi attivamente durante l'animazione dell'algor
itmo, evitando le presentazioni statiche e passive 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Semplificare
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 ridurre la complessit dell'applicazione, a partire dall'interfaccia grafica.
 Per quanto riguarda l'esposizione dei concetti, nascondere per quanto possibile
 i dettagli implementativi degli algoritmi, e animare le i singoli passi
 operazioni pi complesse.
 L'applicazione inoltre deve essere talmente semplice da necessitare di
 una minima documentazione relativa al proprio funzionamento, in quanto
 l'utente deve riuscire ad avviarla e comprenderne l'utilizzo fin dal primo
 avvio.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

DataSet
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 fornire diverse tipologie di gestione dei dati in ingresso
\end_layout

\begin_deeper
\begin_layout Itemize
Dati inseriti dall'utente, per permettere l'eplorazione di tutte le possibili
 configurazioni, dando la possibilit allo studente di verificare il comportament
o della struttura in casi particolari da lui costruiti; 
\end_layout

\begin_layout Itemize
Dati random, di cui l'utente potrebbe controllare solo alcuni parametri
 (con la dimensione, il range, ecc..); 
\end_layout

\begin_layout Itemize
Dati pre-costruiti ad hoc, che permettano allo studente di analizzare il
 comportamento chiave dell'algortimo in situazioni chiave, preparate ad
 hoc dal docente o dal programmatore.
 Questa funzionalit risulta utile perch generalmente gli studenti (soprattutto
 se alle prime armi) non ha la fantasia necessaria per creare casi particolari
 di testing.
 
\end_layout

\end_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Controllo
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 se si tratta di una semplice rappresentazione animata dell'esecuzione di
 un programma su di una struttura dati, fondamentale permettere allo studente
 di controllare il flusso dell'animazione attraverso una serie di comandi,
 quali il controllo della velocit (nel caso si parli di un'animazione continua),
 possibilit di procedere passo-passo, andare avanti e indietro nell'animazione.
 Algoviz riporta che l'utilizzo dell'animazione spezzata in passi, produce
 risultati migliori nell'apprendimento rispetto ad una visualizzazione continua
 del funzionamento.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Strumenti-Disponibili"

\end_inset

Strumenti Disponibili
\end_layout

\begin_layout Standard
La relazione [2] redatta dal gruppo di lavoro di Algoviz [¹], illustra il
 lavoro di raccolta di AV da essi realizzato nel 2006: sono stati trovati
 circa 350 AV all'epoca, che sono quindi stati raccolti e classificati nel
 catalogo presente nel sito, il quale settimanalmente aggiornato e ad oggi
 contiene pi di 500 visualizzazioni.
 Gran parte degli strumentu catalogati riguarda gli argomenti principali
 dell'insegnamento di Algoritmi e Strutture dati, primo fra tutti il problema
 dell'ordinamento, al quale seguono le strutture di ricerca (ABR) strutture
 lineari e gli algoritmi sui grafi.
\end_layout

\begin_layout Standard
A partire da questa raccolta, si sono analizzati i principali pacchetti
 che potenzialmente costituivano un punto di partenza per altri sviluppatori
 dal quale partire per creare la propria applicazione di animazione di algoritmi.
 Gran parte delle applicazioni raccolte consistono in passive rappresentazioni
 di algortimi che agiscono su strutture dati preinstallate (quindi non personali
zzabili) nelle quali l'utente coinvolto solo per quanto riguarda il controllo
 del flusso.
 Esistono per alcune eccezioni, in cui tale rappresentazione arricchita
 con funzionalit interessanti che catturano e focalizzano meglio l'attenzione
 dello studente sull'argomento.
\end_layout

\begin_layout Standard
Di seguito sono descritti alcuni dei principali pacchetti che sono stati
 analizzati durante la ricerca.
 Molti altri software sono stati esaminati, ma in questa circostanza non
 vengono riportati, in quanto sono risultati presentare caratteristiche
 molto simili a quelle dei programmi che ora verranno esposti.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Animal
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 Il software Animal [11] fornisce 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

JHAVE'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 pacchetto migliore, classificato al 2 posto, in quanto non si capice come
 modificarlo e le domande fanno cagare 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

MatrixPro
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 e Trackla2, vedi seguito 
\end_layout

\begin_layout Standard
[inserire magari un paio di immagini di screenshot di Animale JHAVE]
\end_layout

\end_body
\end_document
